LIBRARIES SET UP:
glad
GLFW
GLUT


#include <iostream>
#include<bits/stdc++.h>
#include "glad.h"
#include <GLFW/glfw3.h>
using namespace std;


int main() {

    
    GLFWwindow* window;
    if (!glfwInit()) {
        cout << "Failed to initialize GLFW" << std::endl;
        return -1;
    }
    window = glfwCreateWindow(640, 480, "Window", NULL, NULL);
    
    if (!window) {
        cout << "Failed to create GLFW window" << std::endl;
        glfwTerminate();
        return -1;
    }
    glfwMakeContextCurrent(window);

    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) {
        cout << "Failed to initialize GLAD" << std::endl;
        return -1;
    }

    // Set clear color to blue
    glClearColor(0.25f, 0.0f, 1.0f, 1.0f);

    while (!glfwWindowShouldClose(window)) {
        glfwPollEvents();


        glClear(GL_COLOR_BUFFER_BIT);

        glfwSwapBuffers(window);
    }

   

    glfwTerminate();
    return 0;
}

    

cmake_minimum_required(VERSION 3.0.0)
project(HelloWorld VERSION 0.1.0)
cmake_policy(SET CMP0072 NEW)

find_package(OpenGL REQUIRED)

add_executable(HelloWorld src/main.cpp
                src/glad.h
                src/glad.c)


target_link_libraries(HelloWorld 
            glfw
            OpenGL::GL)


cmake_minimum_required(VERSION 3.0.0)
project(Test VERSION 0.1.0)
cmake_policy(SET CMP0072 NEW)

find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)

add_executable(Test src/main.cpp)

target_link_libraries(Test 
            ${OPENGL_LIBRARIES}
            ${GLUT_LIBRARY})